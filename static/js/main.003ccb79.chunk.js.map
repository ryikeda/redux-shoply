{"version":3,"sources":["helpers.js","components/Navbar.js","components/Cart.js","components/ProductDetails.js","components/ProductCartBtn.js","actions.js","actionTypes.js","components/ProductCard.js","components/ProductsList.js","components/Routes.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["calculateCartTotal","products","cart","total","id","price","calculateTotalQuantity","totalQuantity","Navbar","history","useHistory","cartItems","useSelector","state","totalQty","AppBar","position","Toolbar","Typography","variant","style","flexGrow","IconButton","color","onClick","push","Badge","badgeContent","useStyles","makeStyles","theme","btn","margin","spacing","Cart","cartValue","classes","Container","maxWidth","Paper","className","root","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","align","TableBody","Object","entries","map","key","scope","name","colSpan","Button","media","image","width","height","objectFit","marginTop","link","textDecoration","ProductDetails","useParams","st","image_url","description","Card","CardActionArea","CardMedia","title","src","alt","CardContent","gutterBottom","to","ProductCartBtn","dispatch","useDispatch","fullWidth","type","removeFromCart","addToCart","ProductCard","item","Grid","xs","sm","md","CardActions","Showcase","container","alignItems","justify","value","Routes","path","exact","ProductsList","App","Box","mt","Boolean","window","location","hostname","match","DEFAULT_STATE","rootReducer","action","cartCopy","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.003ccb79.chunk.js","sourcesContent":["export const calculateCartTotal = (products, cart) => {\n  let total = 0;\n  for (let id in products) {\n    const { price } = products[id];\n    const quantity = cart[id] || 0;\n    total += price * quantity;\n  }\n\n  return total;\n};\n\nexport const calculateTotalQuantity = (cart) => {\n  let totalQuantity = 0;\n  for (let id in cart) {\n    totalQuantity += cart[id];\n  }\n  return totalQuantity;\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { calculateTotalQuantity } from \"../helpers\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Badge,\n} from \"@material-ui/core\";\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\n\nconst Navbar = () => {\n  const history = useHistory();\n  const { cartItems } = useSelector((state) => state);\n\n  let totalQty = calculateTotalQuantity(cartItems);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" style={{ flexGrow: 1 }}>\n            Shoply\n          </Typography>\n\n          <IconButton color=\"inherit\" onClick={() => history.push(\"/cart\")}>\n            <Badge badgeContent={totalQty} color=\"secondary\">\n              <ShoppingCartIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { calculateTotalQuantity } from \"../helpers\";\nimport {\n  Paper,\n  Typography,\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Button,\n  Container,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    margin: theme.spacing(2),\n  },\n}));\n\nconst Cart = () => {\n  const history = useHistory();\n  const { products, cartItems, cartValue } = useSelector((state) => state);\n\n  const classes = useStyles();\n  let totalQty = calculateTotalQuantity(cartItems);\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\">Shopping Cart</Typography>\n        <TableContainer component={Paper}>\n          <Table className={classes.table} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Product</TableCell>\n                <TableCell align=\"right\">Qty</TableCell>\n                <TableCell align=\"right\">Price</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.entries(cartItems).map(([key, item]) => (\n                <TableRow>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {products[key].name}\n                  </TableCell>\n                  <TableCell align=\"right\">{cartItems[key]}</TableCell>\n                  <TableCell align=\"right\">{products[key].price}</TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell colSpan={3}>Total</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell colSpan={2} align=\"right\">\n                  {totalQty}\n                </TableCell>\n                <TableCell align=\"right\">${cartValue}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Button\n            onClick={() => {\n              history.push(\"/\");\n            }}\n            variant=\"contained\"\n            className={classes.btn}\n          >\n            Go back\n          </Button>\n        </TableContainer>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { useSelector } from \"react-redux\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useParams, Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {},\n  image: {\n    width: \"100px\",\n    height: \"100px\",\n    objectFit: \"contain\",\n    marginTop: \"10px\",\n  },\n  btn: {\n    margin: theme.spacing(2),\n  },\n  link: {\n    textDecoration: \"none\",\n  },\n}));\n\nconst ProductDetails = () => {\n  const { id } = useParams();\n  const classes = useStyles();\n  const { image_url, name, price, description } = useSelector((st) => ({\n    ...st.products[id],\n  }));\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia title={name} className={classes.media} />\n        <img className={classes.image} src={image_url} alt={name}></img>\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"body1\">${price}</Typography>\n          <Typography variant=\"body2\">{description}</Typography>\n        </CardContent>\n      </CardActionArea>\n      <Link to=\"/\" className={classes.link}>\n        <Button className={classes.btn} variant=\"contained\">\n          Go Back\n        </Button>\n      </Link>\n    </Card>\n  );\n};\n\nexport default ProductDetails;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport { addToCart, removeFromCart } from \"../actions\";\n\nconst ProductCartBtn = ({ id }) => {\n  const dispatch = useDispatch();\n  const add = () => dispatch(addToCart(id));\n  const remove = () => dispatch(removeFromCart(id));\n  return (\n    <>\n      <Button fullWidth variant=\"contained\" onClick={remove}>\n        Remove\n      </Button>\n      <Button fullWidth variant=\"contained\" onClick={add}>\n        Add\n      </Button>\n    </>\n  );\n};\n\nexport default ProductCartBtn;\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./actionTypes\";\n\nexport function addToCart(id) {\n  return {\n    type: ADD_TO_CART,\n    id,\n  };\n}\n\nexport function removeFromCart(id) {\n  return {\n    type: REMOVE_FROM_CART,\n    id,\n  };\n}\n","export const ADD_TO_CART = \"ADD_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ProductCardBtn from \"./ProductCartBtn\";\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 500,\n    height: \"100%\",\n  },\n  media: { height: 0 },\n  image: {\n    width: \"100px\",\n    height: \"100px\",\n    objectFit: \"contain\",\n    marginTop: \"10px\",\n  },\n}));\n\nconst ProductCard = ({ item: { image_url, name, price }, id }) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const handleClick = () => {\n    history.push(`/products/${id}`);\n  };\n  return (\n    <Grid item xs={12} sm={6} md={4}>\n      <Card className={classes.root}>\n        <CardActionArea onClick={handleClick}>\n          <CardMedia title={name} className={classes.media} />\n          <img className={classes.image} src={image_url} alt=\"item\"></img>\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {name}\n            </Typography>\n            <Typography variant=\"body1\">${price}</Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <ProductCardBtn id={id} />\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default ProductCard;\n","import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\n\nimport ProductCard from \"./ProductCard\";\n\nconst Showcase = () => {\n  const products = useSelector((state) => state.products);\n  return (\n    <>\n      <Grid container alignItems=\"center\">\n        <Grid item container spacing={1} justify=\"center\" alignItems=\"stretch\">\n          {Object.entries(products).map(([key, value]) => (\n            <ProductCard key={key} item={value} id={key} />\n          ))}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Showcase;\n","import React from \"react\";\nimport { Switch, Redirect, Route } from \"react-router-dom\";\nimport Cart from \"./Cart\";\nimport ProductDetails from \"./ProductDetails\";\nimport ProductsList from \"./ProductsList\";\n\nconst Routes = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact>\n        <ProductsList />\n      </Route>\n      <Route path=\"/products/:id\" exact>\n        <ProductDetails />\n      </Route>\n      <Route path=\"/cart\" exact>\n        <Cart />\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Container, Box } from \"@material-ui/core\";\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar\";\nimport Routes from \"./components/Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Box mt={3}>\n        <Container>\n          <Routes />\n        </Container>\n      </Box>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./actionTypes\";\nimport { calculateCartTotal } from \"./helpers\";\nimport data from \"./data.json\";\n\nconst DEFAULT_STATE = {\n  products: data.products,\n  cartItems: {},\n  cartValue: 0.0,\n};\n\nfunction rootReducer(state = DEFAULT_STATE, action) {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      const cartCopy = { ...state.cartItems };\n      cartCopy[action.id] = (cartCopy[action.id] || 0) + 1;\n      return {\n        ...state,\n        cartItems: cartCopy,\n        cartValue: calculateCartTotal(state.products, cartCopy),\n      };\n    }\n    case REMOVE_FROM_CART: {\n      const cartCopy = { ...state.cartItems };\n      if (!cartCopy[action.id]) return state;\n      cartCopy[action.id]--;\n      if (cartCopy[action.id] === 0) {\n        delete cartCopy[action.id];\n      }\n      return {\n        ...state,\n        cartItems: cartCopy,\n        cartValue: calculateCartTotal(state.products, cartCopy),\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}